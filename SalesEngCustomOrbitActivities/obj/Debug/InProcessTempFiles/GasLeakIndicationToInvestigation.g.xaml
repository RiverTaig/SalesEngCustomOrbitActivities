<?xml version="1.0" encoding="utf-8"?>
<local:GasLeakIndicationToInvestigation xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:local="clr-namespace:SalesEngCustomOrbitActivities;assembly=SalesEngCustomOrbitActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sot="clr-namespace:SE.Orbit.TaskServices;assembly=SE.Orbit.Services.Core" xmlns:sowa="clr-namespace:SE.Orbit.Workflow.Activities;assembly=SE.Orbit.Workflow.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>SE.Orbit.TaskServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NLog</AssemblyReference>
      <AssemblyReference>Nustache.Core</AssemblyReference>
      <AssemblyReference>SE.Orbit.Services.Core</AssemblyReference>
      <AssemblyReference>SE.Orbit.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Net.Http.Formatting</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SalesEngCustomOrbitActivities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:GasLeakIndicationToInvestigation.Implementation>
    <Sequence>
      <Sequence.Variables>
        <Variable x:TypeArguments="sot:TaskResource" Name="LeakReportTask" />
      </Sequence.Variables>
      <Sequence DisplayName="Create Initial Investigation Task">
        <WriteLine Text="Creating inital investigation task..." />
        <sowa:ConstructTask TaskToCopyFrom="{x:Null}" TaskTypeName="NFGLeakReport">
          <sowa:ConstructTask.Result>
            <OutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </OutArgument>
          </sowa:ConstructTask.Result>
        </sowa:ConstructTask>
        <local:CopyLocation>
          <local:CopyLocation.FromTask>
            <InArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
            </InArgument>
          </local:CopyLocation.FromTask>
          <local:CopyLocation.ToTask>
            <InOutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </InOutArgument>
          </local:CopyLocation.ToTask>
        </local:CopyLocation>
        <WriteLine Text="Copied location" />
        <Sequence DisplayName="Copy Values to New Task">
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">
                <mca:CSharpReference x:TypeArguments="x:Object">LeakReportTask.Properties["DateReported"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.CompletionDate.Value</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Date Reported" />
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">
                <mca:CSharpReference x:TypeArguments="x:Object">LeakReportTask.Properties["ReportedBy"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["ReportedBy"]</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Reported By" />
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">
                <mca:CSharpReference x:TypeArguments="x:Object">LeakReportTask.Properties["GasReading"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["GasReading"]</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Gas Reading" />
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">
                <mca:CSharpReference x:TypeArguments="x:Object">LeakReportTask.Properties["Comments"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Leak Indication Comments: " + CompletedTask.Properties["Notes"] + " (" + CompletedTask.CompletionDate.Value + ")"</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Assigned Comments" />
          <Assign DisplayName="Set Report Code to Initial Investigation">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">
                <mca:CSharpReference x:TypeArguments="x:Object">LeakReportTask.Properties["ReportCode"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">"I"</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Assigned I" />
          <Assign DisplayName="Set Due Date">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Nullable(s:DateTime)">
                <mca:CSharpReference x:TypeArguments="s:Nullable(s:DateTime)">LeakReportTask.DueDate</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
                <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">CompletedTask.CompletionDate.Value.AddMonths(1)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine Text="Set Due Date" />
        </Sequence>
        <WriteLine Text="Assigned Property Values" />
        <sowa:AssignTaskToUser>
          <sowa:AssignTaskToUser.Task>
            <InOutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </InOutArgument>
          </sowa:AssignTaskToUser.Task>
          <sowa:AssignTaskToUser.Upn>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">Convert.ToString(CompletedTask.Owner.Value)</mca:CSharpValue>
            </InArgument>
          </sowa:AssignTaskToUser.Upn>
        </sowa:AssignTaskToUser>
        <WriteLine Text="Assigned User" />
        <sowa:SendTaskToOrbit>
          <sowa:SendTaskToOrbit.Task>
            <InOutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </InOutArgument>
          </sowa:SendTaskToOrbit.Task>
        </sowa:SendTaskToOrbit>
        <WriteLine Text="Sent to Orbit" />
        <sowa:CopyPhotos>
          <sowa:CopyPhotos.FromTask>
            <InArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
            </InArgument>
          </sowa:CopyPhotos.FromTask>
          <sowa:CopyPhotos.ToTask>
            <InOutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </InOutArgument>
          </sowa:CopyPhotos.ToTask>
        </sowa:CopyPhotos>
        <local:CopyRedlines>
          <local:CopyRedlines.FromTask>
            <InArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
            </InArgument>
          </local:CopyRedlines.FromTask>
          <local:CopyRedlines.ToTask>
            <InOutArgument x:TypeArguments="sot:TaskResource">
              <mca:CSharpReference x:TypeArguments="sot:TaskResource">LeakReportTask</mca:CSharpReference>
            </InOutArgument>
          </local:CopyRedlines.ToTask>
        </local:CopyRedlines>
        <WriteLine Text="Done" />
      </Sequence>
      <sads:DebugSymbol.Symbol>d35DOlxzcmNcU2FsZXNFR1VHMjAxNFByb2plY3RzXFNhbGVzRW5nQ3VzdG9tT3JiaXRBY3Rpdml0aWVzXFNhbGVzRW5nQ3VzdG9tT3JiaXRBY3Rpdml0aWVzXEdhc0xlYWtJbmRpY2F0aW9uVG9JbnZlc3RpZ2F0aW9uLnhhbWw+OAPTAQ4CAQE8BdEBEAIBAj0HPW8CAWk+B0QcAgFkRQdQHAIBXVEHUVkCAVtSB6EBEgIBJKIBB6IBYgIBIqMBB64BHwIBG68BB68BVwIBGbABB7YBHgIBFbcBB7cBVwIBE7gBB8MBGQIBDMQBB88BHAIBBdABB9ABTgIBAz1FPWwCAWo+dD6DAQIBaEENQWkCAWVNDU1pAgFhSA1IYAIBXlFFUVYCAVxTCV4SAgFUXwlfWQIBUmAJaxICAUtsCWxXAgFJbQl4EgIBQnkJeVcCAUB6CYUBEgIBOYYBCYYBXgIBN4cBCZIBEgIBMJMBCZMBVwIBLpQBCZ8BEgIBJ6ABCaABWQIBJaIBRaIBXwIBI6sBDasBdgIBH6YBDaYBaQIBHK8BRa8BVAIBGrMBDbMBaQIBFrcBRbcBVAIBFMABDcABaQIBELsBDbsBYAIBDcwBDcwBaQIBCccBDccBYAIBBtABRdABSwIBBFsPW28CAVhWD1Z+AgFVX0dfVgIBU2gPaHMCAU9jD2N8AgFMbEdsVAIBSnUPdXMCAUZwD3B8AgFDeUd5VAIBQYIBD4IBvwECAT19D316AgE6hgFIhgFbAgE4jwEPjwFQAgE0igEPigF8AgExkwFIkwFUAgEvnAEPnAGKAQIBK5cBD5cBeQIBKKABSKABVgIBJg==</sads:DebugSymbol.Symbol>
    </Sequence>
  </local:GasLeakIndicationToInvestigation.Implementation>
</local:GasLeakIndicationToInvestigation>