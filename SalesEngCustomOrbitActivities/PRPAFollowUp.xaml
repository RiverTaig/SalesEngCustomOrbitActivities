<Activity mc:Ignorable="sap sap2010 sads" x:Class="SalesEngCustomOrbitActivities.Activity2"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:SalesEngCustomOrbitActivities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sot="clr-namespace:SE.Orbit.TaskServices;assembly=SE.Orbit.Services.Core"
 xmlns:sowa="clr-namespace:SE.Orbit.Workflow.Activities;assembly=SE.Orbit.Workflow.Activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="CompletedTask" Type="InArgument(sot:TaskResource)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>SalesEngCustomOrbitActivities.Activity2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>SE.Orbit.TaskServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NLog</AssemblyReference>
      <AssemblyReference>Nustache.Core</AssemblyReference>
      <AssemblyReference>SE.Orbit.Services.Core</AssemblyReference>
      <AssemblyReference>SE.Orbit.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Net.Http.Formatting</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SalesEngCustomOrbitActivities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence DisplayName="Create Inspection for Next Month" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="sot:TaskResource" Name="GCBStatusTask" />
      </Sequence.Variables>
      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Creating inspection for next month..." />
      <sowa:ConstructTask TaskToCopyFrom="{x:Null}" sap2010:WorkflowViewState.IdRef="ConstructTask_2" TaskTypeName="PRPAGCBStatus">
        <sowa:ConstructTask.Result>
          <OutArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBStatusTask</mca:CSharpReference>
          </OutArgument>
        </sowa:ConstructTask.Result>
      </sowa:ConstructTask>
      <local:CopyLocation sap2010:WorkflowViewState.IdRef="CopyLocation_2">
        <local:CopyLocation.FromTask>
          <InArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
          </InArgument>
        </local:CopyLocation.FromTask>
        <local:CopyLocation.ToTask>
          <InOutArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBStatusTask</mca:CSharpReference>
          </InOutArgument>
        </local:CopyLocation.ToTask>
      </local:CopyLocation>
      <Sequence DisplayName="Copy Values to New Task" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">
              <mca:CSharpReference x:TypeArguments="x:Object">GCBStatusTask.Properties["FACILITYID"]</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">
              <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["FACILITYID"]</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">
              <mca:CSharpReference x:TypeArguments="x:Object">GCBStatusTask.Properties["PrevCounter"]</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">
              <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["PresentCounter"]</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">
              <mca:CSharpReference x:TypeArguments="x:Object">GCBStatusTask.Properties["PrevMeter"]</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">
              <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["PresentMeter"]</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="s:Nullable(s:DateTime)">
              <mca:CSharpReference x:TypeArguments="s:Nullable(s:DateTime)">GCBStatusTask.DueDate</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">
              <mca:CSharpValue x:TypeArguments="s:DateTime">CompletedTask.CompletionDate.Value.AddMonths(1)</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <sowa:AssignTaskToUser sap2010:WorkflowViewState.IdRef="AssignTaskToUser_2">
        <sowa:AssignTaskToUser.Task>
          <InOutArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBStatusTask</mca:CSharpReference>
          </InOutArgument>
        </sowa:AssignTaskToUser.Task>
        <sowa:AssignTaskToUser.Upn>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">Convert.ToString(CompletedTask.Owner.Value)</mca:CSharpValue>
          </InArgument>
        </sowa:AssignTaskToUser.Upn>
      </sowa:AssignTaskToUser>
      <sowa:SendTaskToOrbit sap2010:WorkflowViewState.IdRef="SendTaskToOrbit_2">
        <sowa:SendTaskToOrbit.Task>
          <InOutArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBStatusTask</mca:CSharpReference>
          </InOutArgument>
        </sowa:SendTaskToOrbit.Task>
      </sowa:SendTaskToOrbit>
      <sowa:CopyPhotos sap2010:WorkflowViewState.IdRef="CopyPhotos_2">
        <sowa:CopyPhotos.FromTask>
          <InArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
          </InArgument>
        </sowa:CopyPhotos.FromTask>
        <sowa:CopyPhotos.ToTask>
          <InOutArgument x:TypeArguments="sot:TaskResource">
            <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBStatusTask</mca:CSharpReference>
          </InOutArgument>
        </sowa:CopyPhotos.ToTask>
      </sowa:CopyPhotos>
    </Sequence>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">CompletedTask.Properties["NeedsRepair"].ToString() == "Y"</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="sot:TaskResource" Name="GCBStatusTask" />
            <Variable x:TypeArguments="sot:TaskResource" Name="GCBRepairTask" />
          </Sequence.Variables>
          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Follow up work needed" />
          <sowa:ConstructTask TaskToCopyFrom="{x:Null}" sap2010:WorkflowViewState.IdRef="ConstructTask_1" TaskTypeName="PRPAGCBRepair">
            <sowa:ConstructTask.Result>
              <OutArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBRepairTask</mca:CSharpReference>
              </OutArgument>
            </sowa:ConstructTask.Result>
          </sowa:ConstructTask>
          <local:CopyLocation sap2010:WorkflowViewState.IdRef="CopyLocation_1">
            <local:CopyLocation.FromTask>
              <InArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
              </InArgument>
            </local:CopyLocation.FromTask>
            <local:CopyLocation.ToTask>
              <InOutArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBRepairTask</mca:CSharpReference>
              </InOutArgument>
            </local:CopyLocation.ToTask>
          </local:CopyLocation>
          <Sequence DisplayName="Copy Values to New Task" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object">GCBRepairTask.Properties["FACILITYID"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["FACILITYID"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object">GCBRepairTask.Properties["PrevCounter"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["PresentCounter"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object">GCBRepairTask.Properties["PrevMeter"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["PresentMeter"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object">GCBRepairTask.Properties["ReportComments"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object">CompletedTask.Properties["PresentCounter"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
              <sap2010:WorkflowViewState.IdRef>Assign_9</sap2010:WorkflowViewState.IdRef>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Nullable(s:DateTime)">
                  <mca:CSharpReference x:TypeArguments="s:Nullable(s:DateTime)">GCBRepairTask.DueDate</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
                  <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">CompletedTask.CompletionDate.Value.AddDays(7)</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <sowa:AssignTaskToUser sap2010:WorkflowViewState.IdRef="AssignTaskToUser_1">
            <sowa:AssignTaskToUser.Task>
              <InOutArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBRepairTask</mca:CSharpReference>
              </InOutArgument>
            </sowa:AssignTaskToUser.Task>
            <sowa:AssignTaskToUser.Upn>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">Convert.ToString(CompletedTask.Owner.Value)</mca:CSharpValue>
              </InArgument>
            </sowa:AssignTaskToUser.Upn>
          </sowa:AssignTaskToUser>
          <sowa:SendTaskToOrbit sap2010:WorkflowViewState.IdRef="SendTaskToOrbit_1">
            <sowa:SendTaskToOrbit.Task>
              <InOutArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBRepairTask</mca:CSharpReference>
              </InOutArgument>
            </sowa:SendTaskToOrbit.Task>
          </sowa:SendTaskToOrbit>
          <sowa:CopyPhotos sap2010:WorkflowViewState.IdRef="CopyPhotos_1">
            <sowa:CopyPhotos.FromTask>
              <InArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpValue x:TypeArguments="sot:TaskResource">CompletedTask</mca:CSharpValue>
              </InArgument>
            </sowa:CopyPhotos.FromTask>
            <sowa:CopyPhotos.ToTask>
              <InOutArgument x:TypeArguments="sot:TaskResource">
                <mca:CSharpReference x:TypeArguments="sot:TaskResource">GCBRepairTask</mca:CSharpReference>
              </InOutArgument>
            </sowa:CopyPhotos.ToTask>
          </sowa:CopyPhotos>
        </Sequence>
      </If.Then>
      <If.Else>
        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="No follow up work required" />
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d2pDOlxzcmNcU2FsZXNFR1VHMjAxNFByb2plY3RzXFNhbGVzRW5nQ3VzdG9tT3JiaXRBY3Rpdml0aWVzXFNhbGVzRW5nQ3VzdG9tT3JiaXRBY3Rpdml0aWVzXFBSUEFGb2xsb3dVcC54YW1sRDgDqAIOAgEBOQWiARACAV6jAQWmAgoCAQI9Bz1vAwGaAT4HRBwDAZUBRQdQHAMBjgFRB4IBEgIBcYMBB44BHwIBao8BB5UBHgIBZpYBB6EBGQIBX6YBC6YBgwECAQOqAQmhAhQCAQekAgmkAmYCAQU9RT1sAwGbAT50PoMBAwGZAUENQWgDAZYBTQ1NaAMBkgFIDUhgAwGPAVIJXRIDAYcBXglpEgMBgAFqCXUSAgF5dgmBARICAXKLAQ2LAXYCAW6GAQ2GAWgCAWuSAQ2SAWgCAWeeAQ2eAWgCAWOZAQ2ZAWACAWCvAQuvAWMCAVywAQu2ASACAVa3AQvCASACAU3DAQuBAhYCAR+CAguNAiMCARaOAguUAiICARGVAgugAh0CAQikAkekAmMCAQZaD1pzAwGLAVUPVXsDAYgBZg9mdwMBhAFhD2F8AwGBAXIPcnUCAX1tD216AgF6fg9+fgIBdnkPeXgCAXOvAUmvAWACAV2wAXiwAYcBAgFbswERswFsAgFXvwERvwFsAgFSugERugFkAgFOxAENzwEWAgFE0AEN2wEWAgE73AEN5wEWAgEy6AEN9AEWAgEp9QENgAIWAgEgigIRigJ6AgEbhQIRhQJsAgEXkQIRkQJsAgESnQIRnQJsAgENmAIRmAJkAgEJzAETzAF3AgFJxwETxwF/AgFF2AET2AF7AgFA0wET0wGAAQIBPOQBE+QBeQIBN98BE98BfgIBM/ABE/ABewIBLusBE+sBgwECASr9ARP9AYwBAgEl+AET+AF8AgEh</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="ConstructTask_2" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="CopyLocation_2" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="211,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignTaskToUser_2" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="SendTaskToOrbit_2" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="CopyPhotos_2" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="522,587">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="ConstructTask_1" sap:VirtualizedContainerService.HintSize="264,22" />
      <sap2010:ViewStateData Id="CopyLocation_1" sap:VirtualizedContainerService.HintSize="264,22" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="264,594">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignTaskToUser_1" sap:VirtualizedContainerService.HintSize="264,22" />
      <sap2010:ViewStateData Id="SendTaskToOrbit_1" sap:VirtualizedContainerService.HintSize="264,22" />
      <sap2010:ViewStateData Id="CopyPhotos_1" sap:VirtualizedContainerService.HintSize="264,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="286,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="522,1280" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="544,2031">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SalesEngCustomOrbitActivities.Activity2_1" sap:VirtualizedContainerService.HintSize="584,2111" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>